# coding: utf-8

"""
    DBaaS

    Manage your databases using our API

    The version of the OpenAPI document: 1.0.0
    Contact: info@liara.ir
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.db_details_database import DBDetailsDatabase  # noqa: E501

class TestDBDetailsDatabase(unittest.TestCase):
    """DBDetailsDatabase unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DBDetailsDatabase:
        """Test DBDetailsDatabase
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DBDetailsDatabase`
        """
        model = DBDetailsDatabase()  # noqa: E501
        if include_optional:
            return DBDetailsDatabase(
                dbid = '',
                type = '',
                plan_id = '',
                status = '',
                scale = 56,
                hostname = '',
                public_network = True,
                version = '',
                volume_size = 56,
                created_at = '',
                db_name = '',
                node = openapi_client.models.db_details_database_node.DB_details_database_node(
                    _id = '', 
                    host = '', ),
                port = 56,
                root_password = '',
                internal_port = 56,
                id = '',
                hourly_price = 1.337,
                meta_data = openapi_client.models.db_details_database_meta_data.DB_details_database_metaData(
                    standalone_replica_set = True, 
                    private_network = True, ),
                username = ''
            )
        else:
            return DBDetailsDatabase(
        )
        """

    def testDBDetailsDatabase(self):
        """Test DBDetailsDatabase"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
